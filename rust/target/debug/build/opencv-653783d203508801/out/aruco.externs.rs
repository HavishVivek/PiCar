extern "C" {
	pub fn cv_aruco_calibrateCameraAruco_const__InputArrayR_const__InputArrayR_const__InputArrayR_const_Ptr_Board_R_Size_const__InputOutputArrayR_const__InputOutputArrayR_const__OutputArrayR_const__OutputArrayR_const__OutputArrayR_const__OutputArrayR_const__OutputArrayR_int_TermCriteria(corners: *const c_void, ids: *const c_void, counter: *const c_void, board: *const c_void, image_size: *const core::Size, camera_matrix: *const c_void, dist_coeffs: *const c_void, rvecs: *const c_void, tvecs: *const c_void, std_deviations_intrinsics: *const c_void, std_deviations_extrinsics: *const c_void, per_view_errors: *const c_void, flags: i32, criteria: *const core::TermCriteria) -> Result<f64>;
	pub fn cv_aruco_calibrateCameraAruco_const__InputArrayR_const__InputArrayR_const__InputArrayR_const_Ptr_Board_R_Size_const__InputOutputArrayR_const__InputOutputArrayR_const__OutputArrayR_const__OutputArrayR_int_TermCriteria(corners: *const c_void, ids: *const c_void, counter: *const c_void, board: *const c_void, image_size: *const core::Size, camera_matrix: *const c_void, dist_coeffs: *const c_void, rvecs: *const c_void, tvecs: *const c_void, flags: i32, criteria: *const core::TermCriteria) -> Result<f64>;
	pub fn cv_aruco_calibrateCameraCharuco_const__InputArrayR_const__InputArrayR_const_Ptr_CharucoBoard_R_Size_const__InputOutputArrayR_const__InputOutputArrayR_const__OutputArrayR_const__OutputArrayR_const__OutputArrayR_const__OutputArrayR_const__OutputArrayR_int_TermCriteria(charuco_corners: *const c_void, charuco_ids: *const c_void, board: *const c_void, image_size: *const core::Size, camera_matrix: *const c_void, dist_coeffs: *const c_void, rvecs: *const c_void, tvecs: *const c_void, std_deviations_intrinsics: *const c_void, std_deviations_extrinsics: *const c_void, per_view_errors: *const c_void, flags: i32, criteria: *const core::TermCriteria) -> Result<f64>;
	pub fn cv_aruco_calibrateCameraCharuco_const__InputArrayR_const__InputArrayR_const_Ptr_CharucoBoard_R_Size_const__InputOutputArrayR_const__InputOutputArrayR_const__OutputArrayR_const__OutputArrayR_int_TermCriteria(charuco_corners: *const c_void, charuco_ids: *const c_void, board: *const c_void, image_size: *const core::Size, camera_matrix: *const c_void, dist_coeffs: *const c_void, rvecs: *const c_void, tvecs: *const c_void, flags: i32, criteria: *const core::TermCriteria) -> Result<f64>;
	pub fn cv_aruco_detectCharucoDiamond_const__InputArrayR_const__InputArrayR_const__InputArrayR_float_const__OutputArrayR_const__OutputArrayR_const__InputArrayR_const__InputArrayR_Ptr_Dictionary_(image: *const c_void, marker_corners: *const c_void, marker_ids: *const c_void, square_marker_length_rate: f32, diamond_corners: *const c_void, diamond_ids: *const c_void, camera_matrix: *const c_void, dist_coeffs: *const c_void, dictionary: *mut c_void) -> Result_void;
	pub fn cv_aruco_detectMarkers_const__InputArrayR_const_Ptr_Dictionary_R_const__OutputArrayR_const__OutputArrayR_const_Ptr_DetectorParameters_R_const__OutputArrayR(image: *const c_void, dictionary: *const c_void, corners: *const c_void, ids: *const c_void, parameters: *const c_void, rejected_img_points: *const c_void) -> Result_void;
	pub fn cv_aruco_drawCharucoDiamond_const_Ptr_Dictionary_R_Vec4i_int_int_const__OutputArrayR_int_int(dictionary: *const c_void, ids: *const core::Vec4i, square_length: i32, marker_length: i32, img: *const c_void, margin_size: i32, border_bits: i32) -> Result_void;
	pub fn cv_aruco_drawDetectedCornersCharuco_const__InputOutputArrayR_const__InputArrayR_const__InputArrayR_Scalar(image: *const c_void, charuco_corners: *const c_void, charuco_ids: *const c_void, corner_color: *const core::Scalar) -> Result_void;
	pub fn cv_aruco_drawDetectedDiamonds_const__InputOutputArrayR_const__InputArrayR_const__InputArrayR_Scalar(image: *const c_void, diamond_corners: *const c_void, diamond_ids: *const c_void, border_color: *const core::Scalar) -> Result_void;
	pub fn cv_aruco_drawDetectedMarkers_const__InputOutputArrayR_const__InputArrayR_const__InputArrayR_Scalar(image: *const c_void, corners: *const c_void, ids: *const c_void, border_color: *const core::Scalar) -> Result_void;
	pub fn cv_aruco_drawMarker_const_Ptr_Dictionary_R_int_int_const__OutputArrayR_int(dictionary: *const c_void, id: i32, side_pixels: i32, img: *const c_void, border_bits: i32) -> Result_void;
	pub fn cv_aruco_drawPlanarBoard_const_Ptr_Board_R_Size_const__OutputArrayR_int_int(board: *const c_void, out_size: *const core::Size, img: *const c_void, margin_size: i32, border_bits: i32) -> Result_void;
	pub fn cv_aruco_estimatePoseBoard_const__InputArrayR_const__InputArrayR_const_Ptr_Board_R_const__InputArrayR_const__InputArrayR_const__InputOutputArrayR_const__InputOutputArrayR_bool(corners: *const c_void, ids: *const c_void, board: *const c_void, camera_matrix: *const c_void, dist_coeffs: *const c_void, rvec: *const c_void, tvec: *const c_void, use_extrinsic_guess: bool) -> Result<i32>;
	pub fn cv_aruco_estimatePoseCharucoBoard_const__InputArrayR_const__InputArrayR_const_Ptr_CharucoBoard_R_const__InputArrayR_const__InputArrayR_const__InputOutputArrayR_const__InputOutputArrayR_bool(charuco_corners: *const c_void, charuco_ids: *const c_void, board: *const c_void, camera_matrix: *const c_void, dist_coeffs: *const c_void, rvec: *const c_void, tvec: *const c_void, use_extrinsic_guess: bool) -> Result<bool>;
	pub fn cv_aruco_estimatePoseSingleMarkers_const__InputArrayR_float_const__InputArrayR_const__InputArrayR_const__OutputArrayR_const__OutputArrayR_const__OutputArrayR_Ptr_EstimateParameters_(corners: *const c_void, marker_length: f32, camera_matrix: *const c_void, dist_coeffs: *const c_void, rvecs: *const c_void, tvecs: *const c_void, _obj_points: *const c_void, estimate_parameters: *mut c_void) -> Result_void;
	pub fn cv_aruco_generateCustomDictionary_int_int_const_Ptr_Dictionary_R_int(n_markers: i32, marker_size: i32, base_dictionary: *const c_void, random_seed: i32) -> Result<*mut c_void>;
	pub fn cv_aruco_generateCustomDictionary_int_int_int(n_markers: i32, marker_size: i32, random_seed: i32) -> Result<*mut c_void>;
	pub fn cv_aruco_getBoardObjectAndImagePoints_const_Ptr_Board_R_const__InputArrayR_const__InputArrayR_const__OutputArrayR_const__OutputArrayR(board: *const c_void, detected_corners: *const c_void, detected_ids: *const c_void, obj_points: *const c_void, img_points: *const c_void) -> Result_void;
	pub fn cv_aruco_getPredefinedDictionary_PREDEFINED_DICTIONARY_NAME(name: crate::aruco::PREDEFINED_DICTIONARY_NAME) -> Result<*mut c_void>;
	pub fn cv_aruco_getPredefinedDictionary_int(dict: i32) -> Result<*mut c_void>;
	pub fn cv_aruco_interpolateCornersCharuco_const__InputArrayR_const__InputArrayR_const__InputArrayR_const_Ptr_CharucoBoard_R_const__OutputArrayR_const__OutputArrayR_const__InputArrayR_const__InputArrayR_int(marker_corners: *const c_void, marker_ids: *const c_void, image: *const c_void, board: *const c_void, charuco_corners: *const c_void, charuco_ids: *const c_void, camera_matrix: *const c_void, dist_coeffs: *const c_void, min_markers: i32) -> Result<i32>;
	pub fn cv_aruco_refineDetectedMarkers_const__InputArrayR_const_Ptr_Board_R_const__InputOutputArrayR_const__InputOutputArrayR_const__InputOutputArrayR_const__InputArrayR_const__InputArrayR_float_float_bool_const__OutputArrayR_const_Ptr_DetectorParameters_R(image: *const c_void, board: *const c_void, detected_corners: *const c_void, detected_ids: *const c_void, rejected_corners: *const c_void, camera_matrix: *const c_void, dist_coeffs: *const c_void, min_rep_distance: f32, error_correction_rate: f32, check_all_orders: bool, recovered_idxs: *const c_void, parameters: *const c_void) -> Result_void;
	pub fn cv_aruco_testCharucoCornersCollinear_const_Ptr_CharucoBoard_R_const__InputArrayR(_board: *const c_void, _charuco_ids: *const c_void) -> Result<bool>;
	pub fn cv_aruco_Board_getPropObjPoints_const(instance: *const c_void) -> *mut c_void;
	pub fn cv_aruco_Board_setPropObjPoints_vector_vector_Point3f__(instance: *mut c_void, val: *mut c_void);
	pub fn cv_aruco_Board_getPropDictionary(instance: *mut c_void) -> *mut c_void;
	pub fn cv_aruco_Board_setPropDictionary_Ptr_Dictionary_(instance: *mut c_void, val: *mut c_void);
	pub fn cv_aruco_Board_getPropIds_const(instance: *const c_void) -> *mut c_void;
	pub fn cv_aruco_Board_setPropIds_vector_int_(instance: *mut c_void, val: *mut c_void);
	pub fn cv_aruco_Board_getPropRightBottomBorder_const(instance: *const c_void) -> core::Point3f;
	pub fn cv_aruco_Board_setPropRightBottomBorder_Point3f(instance: *mut c_void, val: *const core::Point3f);
	pub fn cv_aruco_Board_create_const__InputArrayR_const_Ptr_Dictionary_R_const__InputArrayR(obj_points: *const c_void, dictionary: *const c_void, ids: *const c_void) -> Result<*mut c_void>;
	pub fn cv_aruco_Board_setIds_const__InputArrayR(instance: *mut c_void, ids: *const c_void) -> Result_void;
	pub fn cv_aruco_CharucoBoard_getPropChessboardCorners_const(instance: *const c_void) -> *mut c_void;
	pub fn cv_aruco_CharucoBoard_setPropChessboardCorners_vector_Point3f_(instance: *mut c_void, val: *mut c_void);
	pub fn cv_aruco_CharucoBoard_getPropNearestMarkerIdx_const(instance: *const c_void) -> *mut c_void;
	pub fn cv_aruco_CharucoBoard_setPropNearestMarkerIdx_vector_vector_int__(instance: *mut c_void, val: *mut c_void);
	pub fn cv_aruco_CharucoBoard_getPropNearestMarkerCorners_const(instance: *const c_void) -> *mut c_void;
	pub fn cv_aruco_CharucoBoard_setPropNearestMarkerCorners_vector_vector_int__(instance: *mut c_void, val: *mut c_void);
	pub fn cv_aruco_CharucoBoard_draw_Size_const__OutputArrayR_int_int(instance: *mut c_void, out_size: *const core::Size, img: *const c_void, margin_size: i32, border_bits: i32) -> Result_void;
	pub fn cv_aruco_CharucoBoard_create_int_int_float_float_const_Ptr_Dictionary_R(squares_x: i32, squares_y: i32, square_length: f32, marker_length: f32, dictionary: *const c_void) -> Result<*mut c_void>;
	pub fn cv_aruco_CharucoBoard_getChessboardSize_const(instance: *const c_void) -> Result<core::Size>;
	pub fn cv_aruco_CharucoBoard_getSquareLength_const(instance: *const c_void) -> Result<f32>;
	pub fn cv_aruco_CharucoBoard_getMarkerLength_const(instance: *const c_void) -> Result<f32>;
	pub fn cv_aruco_DetectorParameters_getPropAdaptiveThreshWinSizeMin_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropAdaptiveThreshWinSizeMin_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropAdaptiveThreshWinSizeMax_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropAdaptiveThreshWinSizeMax_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropAdaptiveThreshWinSizeStep_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropAdaptiveThreshWinSizeStep_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropAdaptiveThreshConstant_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropAdaptiveThreshConstant_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropMinMarkerPerimeterRate_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropMinMarkerPerimeterRate_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropMaxMarkerPerimeterRate_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropMaxMarkerPerimeterRate_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropPolygonalApproxAccuracyRate_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropPolygonalApproxAccuracyRate_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropMinCornerDistanceRate_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropMinCornerDistanceRate_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropMinDistanceToBorder_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropMinDistanceToBorder_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropMinMarkerDistanceRate_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropMinMarkerDistanceRate_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropCornerRefinementMethod_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropCornerRefinementMethod_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropCornerRefinementWinSize_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropCornerRefinementWinSize_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropCornerRefinementMaxIterations_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropCornerRefinementMaxIterations_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropCornerRefinementMinAccuracy_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropCornerRefinementMinAccuracy_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropMarkerBorderBits_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropMarkerBorderBits_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropPerspectiveRemovePixelPerCell_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropPerspectiveRemovePixelPerCell_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropPerspectiveRemoveIgnoredMarginPerCell_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropPerspectiveRemoveIgnoredMarginPerCell_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropMaxErroneousBitsInBorderRate_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropMaxErroneousBitsInBorderRate_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropMinOtsuStdDev_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropMinOtsuStdDev_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropErrorCorrectionRate_const(instance: *const c_void) -> f64;
	pub fn cv_aruco_DetectorParameters_setPropErrorCorrectionRate_double(instance: *mut c_void, val: f64);
	pub fn cv_aruco_DetectorParameters_getPropAprilTagQuadDecimate_const(instance: *const c_void) -> f32;
	pub fn cv_aruco_DetectorParameters_setPropAprilTagQuadDecimate_float(instance: *mut c_void, val: f32);
	pub fn cv_aruco_DetectorParameters_getPropAprilTagQuadSigma_const(instance: *const c_void) -> f32;
	pub fn cv_aruco_DetectorParameters_setPropAprilTagQuadSigma_float(instance: *mut c_void, val: f32);
	pub fn cv_aruco_DetectorParameters_getPropAprilTagMinClusterPixels_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropAprilTagMinClusterPixels_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropAprilTagMaxNmaxima_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropAprilTagMaxNmaxima_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropAprilTagCriticalRad_const(instance: *const c_void) -> f32;
	pub fn cv_aruco_DetectorParameters_setPropAprilTagCriticalRad_float(instance: *mut c_void, val: f32);
	pub fn cv_aruco_DetectorParameters_getPropAprilTagMaxLineFitMse_const(instance: *const c_void) -> f32;
	pub fn cv_aruco_DetectorParameters_setPropAprilTagMaxLineFitMse_float(instance: *mut c_void, val: f32);
	pub fn cv_aruco_DetectorParameters_getPropAprilTagMinWhiteBlackDiff_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropAprilTagMinWhiteBlackDiff_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropAprilTagDeglitch_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropAprilTagDeglitch_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropDetectInvertedMarker_const(instance: *const c_void) -> bool;
	pub fn cv_aruco_DetectorParameters_setPropDetectInvertedMarker_bool(instance: *mut c_void, val: bool);
	pub fn cv_aruco_DetectorParameters_getPropUseAruco3Detection_const(instance: *const c_void) -> bool;
	pub fn cv_aruco_DetectorParameters_setPropUseAruco3Detection_bool(instance: *mut c_void, val: bool);
	pub fn cv_aruco_DetectorParameters_getPropMinSideLengthCanonicalImg_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_DetectorParameters_setPropMinSideLengthCanonicalImg_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_DetectorParameters_getPropMinMarkerLengthRatioOriginalImg_const(instance: *const c_void) -> f32;
	pub fn cv_aruco_DetectorParameters_setPropMinMarkerLengthRatioOriginalImg_float(instance: *mut c_void, val: f32);
	pub fn cv_aruco_DetectorParameters_DetectorParameters() -> Result<*mut c_void>;
	pub fn cv_aruco_DetectorParameters_create() -> Result<*mut c_void>;
	pub fn cv_aruco_DetectorParameters_readDetectorParameters_const_FileNodeR(instance: *mut c_void, fn_: *const c_void) -> Result<bool>;
	pub fn cv_aruco_Dictionary_getPropBytesList_const(instance: *const c_void) -> *mut c_void;
	pub fn cv_aruco_Dictionary_setPropBytesList_Mat(instance: *mut c_void, val: *mut c_void);
	pub fn cv_aruco_Dictionary_getPropMarkerSize_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_Dictionary_setPropMarkerSize_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_Dictionary_getPropMaxCorrectionBits_const(instance: *const c_void) -> i32;
	pub fn cv_aruco_Dictionary_setPropMaxCorrectionBits_int(instance: *mut c_void, val: i32);
	pub fn cv_aruco_Dictionary_Dictionary_const_MatR_int_int(_bytes_list: *const c_void, _marker_size: i32, _maxcorr: i32) -> Result<*mut c_void>;
	pub fn cv_aruco_Dictionary_Dictionary_const_Ptr_Dictionary_R(_dictionary: *const c_void) -> Result<*mut c_void>;
	pub fn cv_aruco_Dictionary_create_int_int_int(n_markers: i32, marker_size: i32, random_seed: i32) -> Result<*mut c_void>;
	pub fn cv_aruco_Dictionary_create_int_int_const_Ptr_Dictionary_R_int(n_markers: i32, marker_size: i32, base_dictionary: *const c_void, random_seed: i32) -> Result<*mut c_void>;
	pub fn cv_aruco_Dictionary_readDictionary_const_FileNodeR(instance: *mut c_void, fn_: *const c_void) -> Result<bool>;
	pub fn cv_aruco_Dictionary_writeDictionary_Ptr_FileStorage_R(instance: *mut c_void, fs: *mut c_void) -> Result_void;
	pub fn cv_aruco_Dictionary_get_int(dict: i32) -> Result<*mut c_void>;
	pub fn cv_aruco_Dictionary_identify_const_const_MatR_intR_intR_double(instance: *const c_void, only_bits: *const c_void, idx: *mut i32, rotation: *mut i32, max_correction_rate: f64) -> Result<bool>;
	pub fn cv_aruco_Dictionary_getDistanceToId_const_const__InputArrayR_int_bool(instance: *const c_void, bits: *const c_void, id: i32, all_rotations: bool) -> Result<i32>;
	pub fn cv_aruco_Dictionary_drawMarker_const_int_int_const__OutputArrayR_int(instance: *const c_void, id: i32, side_pixels: i32, _img: *const c_void, border_bits: i32) -> Result_void;
	pub fn cv_aruco_Dictionary_getByteListFromBits_const_MatR(bits: *const c_void) -> Result<*mut c_void>;
	pub fn cv_aruco_Dictionary_getBitsFromByteList_const_MatR_int(byte_list: *const c_void, marker_size: i32) -> Result<*mut c_void>;
	pub fn cv_aruco_EstimateParameters_getPropPattern_const(instance: *const c_void) -> crate::aruco::PatternPos;
	pub fn cv_aruco_EstimateParameters_setPropPattern_PatternPos(instance: *mut c_void, val: crate::aruco::PatternPos);
	pub fn cv_aruco_EstimateParameters_getPropUseExtrinsicGuess_const(instance: *const c_void) -> bool;
	pub fn cv_aruco_EstimateParameters_setPropUseExtrinsicGuess_bool(instance: *mut c_void, val: bool);
	pub fn cv_aruco_EstimateParameters_getPropSolvePnPMethod_const(instance: *const c_void) -> crate::calib3d::SolvePnPMethod;
	pub fn cv_aruco_EstimateParameters_setPropSolvePnPMethod_SolvePnPMethod(instance: *mut c_void, val: crate::calib3d::SolvePnPMethod);
	pub fn cv_aruco_EstimateParameters_EstimateParameters() -> Result<*mut c_void>;
	pub fn cv_aruco_EstimateParameters_create() -> Result<*mut c_void>;
	pub fn cv_aruco_GridBoard_draw_Size_const__OutputArrayR_int_int(instance: *mut c_void, out_size: *const core::Size, img: *const c_void, margin_size: i32, border_bits: i32) -> Result_void;
	pub fn cv_aruco_GridBoard_create_int_int_float_float_const_Ptr_Dictionary_R_int(markers_x: i32, markers_y: i32, marker_length: f32, marker_separation: f32, dictionary: *const c_void, first_marker: i32) -> Result<*mut c_void>;
	pub fn cv_aruco_GridBoard_getGridSize_const(instance: *const c_void) -> Result<core::Size>;
	pub fn cv_aruco_GridBoard_getMarkerLength_const(instance: *const c_void) -> Result<f32>;
	pub fn cv_aruco_GridBoard_getMarkerSeparation_const(instance: *const c_void) -> Result<f32>;
}
